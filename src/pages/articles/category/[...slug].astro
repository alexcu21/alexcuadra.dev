---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Grid from '../../../components/Grid.astro';
import { getArticlesByCategory, getArticlesCategories } from '../../../data/client';
import Hero from '../../../components/Hero.astro';
import Icon from '../../../components/Icon.astro';

// Get the category slug dynamically from the URL
const { slug } = Astro.params;

// Fetch the category name and articles dynamically
let name;
let articles = [];

try {
  // Fetch all categories to find the name of the current category
  const categories = await getArticlesCategories();
  const currentCategory = categories.find((category: any) => category.slug === slug);

  if (currentCategory) {
    name = currentCategory.name;
    // Fetch articles for the current category
    articles = await getArticlesByCategory(slug);
  } else {
    throw new Error(`Category with slug "${slug}" not found.`);
  }

} catch (error) {
  console.error("Error fetching category or articles:", error);
  throw new Error("Failed to load articles for this category.");
}
---

<BaseLayout title='Articles' description='Articles in this category'>
  <div class="stack gap-20">
    <div class="stack gap-15">
    	<header>
			<div class="wrapper stack gap-2">
				<a class="back-link" href="/articles"><Icon icon="arrow-left" /> {name}</a>
				<Hero title={`Articles in ${name}`} align="start">
					<div class="details">
						<p class="description">Take a look on these articles</p>
					</div>
				</Hero>
			</div>
		</header>
      <main class="wrapper">
        <div class="stack gap-10 content">
			<div class="gallery">
				<Grid>
					{articles.map((article: any) => (
						<li class="mention-card">
						<a href={`/articles/category/${slug}/${article.slug}`}>{article.title}</a>
						</li>
					))}
				</Grid>
			</div>
        </div>
      </main>
    </div>
  </div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.links-to-project{
		display: flex;
		gap: 0.5rem;
	}

	.back-link {
		display: none;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}
	}

	<style>
    .gallery {
		grid-area: gallery;
	}

    .mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
</style>

</style>
